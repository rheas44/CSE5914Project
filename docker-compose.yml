version: '3.8'

services:
  frontend:
    build:
      context: ./elastic-eats-ui
    ports:
      - "5173:5173"
    environment:
      NODE_VERSION: 20.12.2
      NPM_VERSION: 10.5.0
    restart: always
    networks:
      - app-network

  app:
    build:
      context: .
    container_name: python_app
    ports:
      - "8000:8000"
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    volumes:
      - .:/app
    depends_on:
      - elasticsearch
    networks:
      - app-network
    entrypoint: ["/app/wait-for-elasticsearch.sh"]
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - network.host=0.0.0.0
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 | grep -q 'cluster_name'"]
      interval: 10s
      timeout: 10s
      retries: 30

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

volumes:
  es_data:
    driver: local

networks:
    app-network:
      driver: bridge
